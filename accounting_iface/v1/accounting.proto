syntax = "proto3";
package accounting_iface.v1;

option go_package = "github.com/pdcgo/schema/services/accounting_iface/v1;accounting_iface";

message KeyName {
  string key = 1;
  string name = 2;
}

message Pagination {
  int64 current_page = 1;
  int64 total_page = 2;
  int64 total_items = 3;
}

service ExpenseService {
  rpc ExpenseCreate(ExpenseCreateRequest) returns (ExpenseCreateResponse);
  rpc ExpenseList(ExpenseListRequest) returns (ExpenseListResponse);
}

message ExpenseCreateRequest {}
message ExpenseCreateResponse {}
message ExpenseListRequest {}
message ExpenseListResponse {}

// service untuk accouting rekening
service AccountService {
  rpc AccountCreate(AccountCreateRequest) returns (AccountCreateResponse);
  rpc AccountList(AccountListRequest) returns (AccountListResponse);
  rpc AccountDelete(AccountDeleteRequest) returns (AccountDeleteResponse);
  rpc AccountUpdate(AccountUpdateRequest) returns (AccountUpdateResponse);
  rpc LabelList(LabelListRequest) returns (LabelListResponse);
}

message LabelListRequest {
  string keyword = 1;
}
message LabelListResponse {
  repeated KeyName data = 1;
}

message AccountUpdateRequest {
  uint64 team_id = 1;
  string name = 2;
  string number_id = 3;
  repeated KeyName labels = 4;
}

message AccountUpdateResponse {
  string message = 1;
}

message AccountDeleteRequest {
  repeated uint64 account_ids = 1;
}

message AccountDeleteResponse {
  string message = 1;
}

message AccountItem {
  uint64 id = 1;
  uint64 team_id = 2;
  string name = 3;
  string number_id = 4;
  string account_type = 5;
  repeated KeyName labels = 6;
}

message AccountListRequest {
  repeated string labels = 1;
  string keyword = 2;
}

message AccountListResponse {
  string message = 1;
  repeated AccountItem data = 2;
}

message AccountCreateRequest {
  uint64 team_id = 1;
  string name = 2;
  string number_id = 3;
  string account_type = 4;
  repeated KeyName labels = 5;
}

message AccountCreateResponse {
  string message = 1;
}

service TransferService {
  rpc TransferCreate(TransferCreateRequest) returns (TransferCreateResponse);
  rpc TransferUpdate(TransferUpdateRequest) returns (TransferUpdateResponse);
  rpc TransferList(TransferListRequest) returns (TransferListResponse);
  rpc TransferTypeList(TransferTypeListRequest) returns (TransferTypeListResponse);
}

message TransferUpdateRequest {
  uint64 transaction_id = 1;
  double amount = 2;
  int64 transfer_at = 3;
}
message TransferUpdateResponse {
  string message = 1;
}

message TransferListRequest {
  int64 start_date = 1;
  int64 end_date = 2;
}

message TransferListResponse {
  string message = 1;
}

message TransferTypeListRequest {}
message TransferTypeListResponse {
  string message = 1;
  repeated KeyName data = 2;
}

message TransferCreateResponse {
  string message = 1;
}

message TransferCreateRequest {
  uint64 from_team_id = 1;
  uint64 to_team_id = 2;
  string type = 3;
  double amount = 4;
  int64 transfer_at = 5;
  string desc = 6;
}
