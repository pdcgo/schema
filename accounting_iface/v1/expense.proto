syntax = "proto3";
package accounting_iface.v1;

import "common/v1/common.proto";

option go_package = "github.com/pdcgo/schema/services/accounting_iface/v1;accounting_iface";

// # Service untuk mencatat pengeluaran dari selling, warehouse, dan internal yang baru
service ExpenseService {
  rpc ExpenseCreate(ExpenseCreateRequest) returns (ExpenseCreateResponse);
  rpc ExpenseList(ExpenseListRequest) returns (ExpenseListResponse);
  rpc ExpenseTypeList(ExpenseTypeListRequest) returns (ExpenseTypeListResponse);
  rpc ExpenseSetup(ExpenseSetupRequest) returns (ExpenseSetupResponse);
}

message ExpenseSetupRequest {}
message ExpenseSetupResponse {
  string message = 1;
}

enum ExpenseType {
  EXPENSE_TYPE_UNSPECIFIED = 0;
  EXPENSE_TYPE_INTERNAL = 1;
  EXPENSE_TYPE_SELLING = 2;
  EXPENSE_TYPE_WAREHOUSE = 3;
}

message ExpenseTypeListRequest {
  ExpenseType type = 1;
}
message ExpenseTypeListResponse {
  string message = 1;
  repeated common.v1.KeyName data = 2;
}

message ExpenseItem {
  uint64 id = 1;
  uint64 team_id = 2;
  uint64 created_by_id = 3;
  string desc = 4;
  string expense_type = 5;
  double amount = 6;
  int64 expense_at = 7;
  int64 created_at = 8;
  common.v1.User created_by = 9;
}

message ExpenseCreateRequest {
  uint64 team_id = 1;
  string desc = 2;
  string expense_type = 3;
  double amount = 4;
  int64 expense_at = 5;
}

message ExpenseCreateResponse {
  string message = 1;
}

message ExpenseListRequest {
  uint64 team_id = 1;
  uint64 by_user_id = 2;
  common.v1.TimeFilter time_range = 3;
  common.v1.PageFilter page = 4;
}

message ExpenseListResponse {
  string message = 1;
  repeated ExpenseItem data = 2;
  common.v1.PageInfo page_info = 3;
}
